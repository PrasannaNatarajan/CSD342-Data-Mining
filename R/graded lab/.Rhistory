runif(10)
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10))
plot(runif(10,n = 10))
plot(runif(10,n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
plot(runif(n = 10,min = 1,max=1000))
dnow <- data.frame(x=rnorm(100), y=runif(100))
dnow
dnow.head()
dnow.head
head(dnow)
head(dnow,4)
dnow[,]
dnow.x
dnow$x
dnow <- data.frame(x=rnorm(100), y=runif(100),z=runif(100,min=0,max=1))
dnow
dnow[,"z"]
dnow[,"z",drop=FALSE]
dnow[,"z","Y",drop=FALSE]
dnow[,"z","y",drop=FALSE]
dnow[,"y z",drop=FALSE]
dnow[,c(2,3),drop=FALSE]
dnow[,c(2,3)]
v<-c(matrix(1:10,nrows=5,ncol=2),1)
v<-c(matrix(1:10,nrow=5,ncol=2),1)
v
v<-c(matrix(1:10,nrow=5,ncol=2),matrix(1:100,nrow=10,ncol=10))
v
class(v)
class(c(1:10))
class(seq(1,10))
class(seq(1,10,5))
(seq(1,10,5))
seq(1,10)
seq(1,10,1)
seq(1,10,2)
seq(1,10,0.00000000000000009)
seq(1,10,0.00000000009)
seq(1,10,0.00009)
rep(1:10)
rep(1:10,each=110)
rep(1:10,each=10)
rep(0)
rep(0,10)
rep(0:20,10)
rep(0:20,x = 1)
rep(0:20,x = 20)
rep(0:20,times=10)
rep(0:20,each=10)
c(1,T)
c(1,F)
c(T,F)
x <- c(4, “a”, TRUE)
x <- c(4, "a", TRUE)
x
class(x)
paste("a", "b", se = ":")
paste("a", "b", sep = ":")
f <- function(num = 1) {
+        hello <- "Hello, world!\n"
+        for(i in seq_len(num)) {
+                cat(hello)
+         }
+         chars <- nchar(hello) * num
+         chars
+ }
lm
d<-"Hello World\n"
d
nchars(d)
nchar(d)
d<-"Hello World\n"
class(c(1L,2))
args(paste)
nobs()
?nobs()
x<-4
class(x)
x<-4L
class(x)
cbind(1:4,5:8,9:12,0)
rbind(1:4,5:8,9:12,0)
x<-1
x
msg<-'hello'
print msg
msg
print(msg)
msg
x<-1:10
x
cbind(x)
cbind(x,1:2)
cbind(x,1:20)
x<5
x<-5
x
1/Inf
mean(Inf,NaN,1,2,3)
mean(1,2,3)
mean(1,2,3,Inf)
mean(1,2,3,NaN)
mean(1,2,3,NaN,Inf)
mean(2,3,NaN,Inf)
mean(2,3,NaN,Inf,na.rm=FALSE)
mean(3,NaN,Inf,na.rm=FALSE)
mean(3,na,Inf,na.rm=FALSE)
mean(3,NA,Inf,na.rm=FALSE)
iris
mean(iris)
mean(iris$Sepal.Length)
iris.lapply()
?lapply()
lapply(iris$Sepal.Length,iris$Sepal.Length+iris$Sepal.Width)
f<-function(x){}
f<-function(x){}
f<-function(x){x<-x+x}
lapply(iris$Sepal.Length,f)
if(x<5){}
if(x<5){x}
x
if(x=5){x}
if(x==5){x}
join
select.list(iris)
select.list(iris)
mean()
args(mean)
function(mean)
Error in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededError in if (trim > 0 && n) { : missing value where TRUE/FALSE neededquit
View(`%p%`)
View(`%p%`)
paste(1:10,c(10:100000))
1:10%p%c(10:100)
View(boring_function)
View(boring_function)
View(evaluate)
View(evaluate)
View(f)
View(my_mean)
View(telegram)
airquality
set.seed(1)
rpois(5,2)
?dpois
getwd()
setwd("~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab")
us.map
us.map <- readOGR(dsn = "C:/Users/prasanna/Documents/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/tl_2016_us_state", layer = "tl_2016_us_state", stringsAsFactors = FALSE)
library(maps)
library(sp)
library(rgeos)
library(rgdal)
library(maptools)
library(dplyr)
library(leaflet)
library(scales)
us.map <- readOGR(dsn = "C:/Users/prasanna/Documents/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/tl_2016_us_state", layer = "tl_2016_us_state", stringsAsFactors = FALSE)
df2016 <- read.csv("2016.csv")
df2000 <- read.csv("2000.csv")
df2004 <- read.csv("2004.csv")
df2008 <- read.csv("2008.csv")
df2012 <- read.csv("2012.csv")
colnames(df2016)
foo <- list(df2016,df2000,df2004,df2008,df2012)
do.call("rbind", foo)
df_all <- do.call("rbind", foo)
df_all$Year
tail(df_all$Year)
df_sub <- subset(df_all,Parameter.Code==para_code,select = c("State.Name","State.Code","Arithmetic.Mean","Year"))
df_sub <- subset(df_all,Parameter.Code==44201,select = c("State.Name","State.Code","Arithmetic.Mean","Year"))
df_sub
tail(df_sub)
m_2016<-0
m_2000<-0
m_2004<-0
m_2008<-0
m_2012<-0
for (i in 1:(length(unique(tempdf_subs$State.Name)))*unique(tempdf_subs$Year)){
if(tempdf_subs$Year == 2016)
m_2016<-c(m_2016,mean(tempdf_subs[tempdf_subs$State.Name==unique(tempdf_subs$State.Name)[i],2]))
}
for (i in 1:(length(unique(df_subs$State.Name)))*unique(df_subs$Year)){
if(df_subs$Year == 2016)
m_2016<-c(m_2016,mean(df_subs[df_subs$State.Name==unique(df_subs$State.Name)[i],2]))
}
for (i in 1:(length(unique(df_sub$State.Name)))*unique(df_sub$Year)){
if(df_sub$Year == 2016)
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],2]))
}
m_2016
m_2016<-0
m_2000<-0
m_2004<-0
m_2008<-0
m_2012<-0
for (i in 1:(length(unique(df_sub$State.Name)))*unique(df_sub$Year)){
if(df_sub$Year == 2016)
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],3]))
}
m_2016
df_sub[,3]
for (i in 1:(length(unique(df_sub$State.Name)))*unique(df_sub$Year)){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],3]))}
}
m_2016
m_2016 <- 0
for (i in 1:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],3]))}
}
m_2016 <- 0
for (i in 1:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],3]))}
}
m_2016
m_2016 <- 0
for (i in 1:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i],3])); print(i);}
}
length(unique(df_sub$State.Name))
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%55)],3])); print(i);}
}
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%55)],3])); print(i);}
}
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%55)],3])); print(i);}}
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)],3])); print(i);}}
m_2016
m_2016 <- 0
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
if(df_sub$Year == 2016){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)],3])); print(i);}}
m_2016
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] && df_sub$Year == 2016,3])); print(i);}
m_2016
m_2016 <- 0
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] && df_sub$Year == 2016,3])); print(i);}
m_2016 <- 0
for (i in 0:(length(unique(df_sub$State.Name)))*length(unique(df_sub$Year))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] && df_sub$Year == 2016,3])); print(i);}
m_2016
for (i in 0:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] && df_sub$Year == 2016,3])); print(i);}
m_2016 <- 0
for (i in 0:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] && df_sub$Year == 2016,3])); print(i);}
m_2016
for (i in 0:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] & df_sub$Year == 2016,3])); print(i);}
m_2016
m_2016 <- 0
for (i in 0:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[1+ (i%%55)] & df_sub$Year == 2016,3])); print(i);}
m_2016
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3])); print(i);}
m_2016
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3])); print(i);print(mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]))}
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3])); print(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]);print(mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]))}
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3])); print("starts here");print(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]);print(mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]))}
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3])); print("starts here i=");print(i);print(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]);print(mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]))}
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[df_sub$State.Name==unique(df_sub$State.Name)[i] & df_sub$Year == 2016,3]));}
m_2016
newdf <- data.frame(unique(df_sub$State.Code),m[2:(length(unique(df_sub$State.Name))+1)])
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)])
colnames(newdf)
`colnames(newdf)<-c("State.Code","avg")
`
colnames(newdf)<-c("State.Code","avg")
newdf
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],2016)
newdf
subset(newdf,!is.nan(newdf[[2]]))
newdf <- subset(newdf,!is.nan(newdf[[2]]))
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,newdf)
}
l<-c()
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,newdf)
}
l
df_all_subs <- do.call("rbind", l)
df_all_subs
colnames(df_all_subs)
rownames(df_all_subs)
df_all_subs <- do.call("lbind", l)
df_all_subs <- do.call("bind", l)
?bind
df_all_subs <- do.call("bind_cols", l)
df_all_subs <- do.call("bind", l)
df_all_subs <- do.call("rbind", l)
df_all_subs
l <- list()
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,newdf)
}
l
df_all_subs <- do.call("rbind", l)
df_all_subs
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,df_subs$Year[j] = newdf)
}
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,unique(df_sub$Year)[j] = newdf)
}
for(j in 1:length(unique(df_sub$Year))){
for (i in 1:(length(unique(df_sub$State.Name)))){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
newdf <- data.frame(unique(df_sub$State.Code),m_2016[2:(length(unique(df_sub$State.Name))+1)],unique(df_sub$Year)[j])
colnames(newdf)<-c("State.Code","avg","Year")
newdf <- subset(newdf,!is.nan(newdf[[2]]))
l<-c(l,j = newdf)
}
l
newdf
library(plotly)
p <- plot_ly(newdf, x = ~Year, y = ~avg, type = 'bar', name = 'graph') %>%
add_trace(y = ~State.Code, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(newdf, x = ~Year, y = ~avg, type = 'bar', name = 'graph') %>%
add_trace(x = ~State.Code, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(newdf, x = ~Year, y = ~avg, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(x = ~State.Code, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 100),
barmode = 'group')
p
p <- plot_ly(newdf, x = ~State.Code, y = ~avg, type = 'bar', name = 'graph') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
unique(df_sub$State.Name)
unique(df_sub$State.Name) == unique(read.csv("clean_pollution.csv")$State.Name)
temp <- read.csv("clean_pollution.csv")
unique(temp$State.Name)
unique(df_sub$State.Name) == unique(temp$State.Name)
df_sub
lenngth(unique(temp$State.Name))
length(unique(temp$State.Name))
length(unique(df_sub$State.Name))
m_2016 <- 0
for (i in 1:(length(unique(df_sub$State.Name))-1)){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == unique(df_sub$Year)[j]),3]));
}
m_2016
m_2016 <- m_2016[2:length(m_2016)]
m_2-16
m_2016
for (i in 1:(length(unique(df_sub$State.Name))-1)){
m_2016<-c(m_2016,mean(df_sub[(df_sub$State.Name==unique(df_sub$State.Name)[i])&(df_sub$Year == 2016),3]));
}
m_2016
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
m_2000
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
unique(df_sub$State.Code)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
temp <- YearPreprocess(44201)
temp
p <- plot_ly(temp, x = ~State.Code, y = ~avg_2016, type = 'bar', name = 'graph') %>%
add_trace(y = ~avg_2000, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(temp, x = ~State.Code, y = ~avg_2016, type = 'bar', name = '2016') %>%
add_trace(y = ~avg_2000, name = '2000') %>% add_trace(y=~avg_2004,name='2004') %>% add_trace(y = ~avg_2008,name='2008') %>% add_trace(y=~avg_2012,name='2012') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
shiny::runApp('AcrossYears')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
YearPreprocess(44201)
runApp('AcrossYears')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
YearPreprocess(44201)
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('sampleApp')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeMap.R')
runApp('sampleApp')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/statePreprocess.R')
runApp('sampleApp')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('AcrossYears')
runApp('sampleApp')
runApp('AcrossYears')
library(RColorBrewer)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
runApp('AcrossYears')
runApp('sampleApp')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
makeDonut("2016.csv",1,44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
makeDonut("2016.csv",1,44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
makeDonut("2016.csv",1,44201)
p <- newdf %>%
plot_ly(labels = ~u,values = ~m,marker = list(color =brewer.pal(11,"Spectral") )) %>%
add_pie(hole=0.6) %>%
layout(title = s,showlegend=F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE,showticklabels = FALSE))
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
makeDonut("2016.csv",1,44201)
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/makeDonut.R')
makeDonut("2016.csv",1,44201)
runApp('sampleApp')
runApp('AcrossYears')
runApp('sampleApp')
runApp('sampleApp')
runApp('AcrossYears')
source('~/Studies/Semester 6/Data mining/labs/lab1/CSD342-Data-Mining/R/graded lab/yearPreprocess.R')
runApp('AcrossYears')
runApp('sampleApp')
runApp('AcrossYears')
